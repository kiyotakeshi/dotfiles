{
    // ----------------------------------
    // core
    "files.autoSave": "afterDelay",
    "workbench.startupEditor": "newUntitledFile",
    "workbench.colorCustomizations": {
        "editorCursor.foreground": "#06d265",
        "editorLineNumber.foreground": "#6ff08b",
        "editorLineNumber.activeForeground": "#fc06d3",
        // "editor.foreground": "#6ff08b",
        // "editor.background": "#060606",
        // "editor.findMatchBackground": "#f5f3f3",
        // "editor.selectionBackground": "#FF0000",
        // "editor.selectionHighlightBackground": "#999d71",
        // "editor.lineHighlightBorder": "#fc06d3",
        // "editorLink.activeForeground": "#ffea00",
        "tab.activeBackground": "#3d3d3c",
        "tab.activeForeground": "#04f78665",
        // "terminal.foreground": "#0ad403"
        // "terminal.ansiBlue": "#f53838",
        // "terminal.background": "#091d0f",
        // "terminalCursor.foreground": "#d9ff00"
    },
    "workbench.tree.renderIndentGuides": "always",
    "workbench.reduceMotion": "on",
    "workbench.iconTheme": "vs-seti",
    "workbench.activityBar.location": "hidden",
    // "workbench.colorTheme": "GitHub Dark Default",
    // "workbench.colorTheme": "Material Theme",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.minimap.enabled": false,
    "editor.guides.bracketPairs": true,
    "editor.guides.bracketPairsHorizontal": true, // default is `active`
    "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
    "editor.roundedSelection": false,
    "editor.cursorWidth": 3,
    "editor.cursorBlinking": "phase",
    "editor.suggestSelection": "first",
    "editor.accessibilitySupport": "off",
    "editor.minimap.autohide": true,
    // 入力時、コードを自動的に整形
    "editor.formatOnType": true,

    // inlay hints
    "javascript.inlayHints.enumMemberValues.enabled": true,
    "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
    "javascript.inlayHints.parameterTypes.enabled": true,
    "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
    "javascript.inlayHints.variableTypes.enabled": true,
    "typescript.inlayHints.enumMemberValues.enabled": true,
    "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
    "typescript.inlayHints.parameterNames.enabled": "all",
    "typescript.inlayHints.parameterTypes.enabled": true,
    "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
    "typescript.inlayHints.variableTypes.enabled": true,
    "editor.inlayHints.fontSize": 4,
    "editor.inlayHints.enabled": "offUnlessPressed",

    "window.zoomLevel": 1,
    // ファイルのパンくずリスト
    // "breadcrumbs.enabled": false,
    "[markdown]": {
        "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
        // ペースト時、自動的に整形しない
        "editor.formatOnPaste": false
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "diffEditor.ignoreTrimWhitespace": false,
    "terminal.external.osxExec": "Ghostty.app",
    "explorer.compactFolders": false,
    "search.smartCase": true,
    // 単語登録
    "cSpell.userWords": [
        "autofetch",
        "autohide",
        "fuga",
        "hoge",
        "rgba",
        "tabnine",
        "todohighlight",
        "vsintellicode"
    ],
    "explorer.confirmDragAndDrop": false,

    // ----------------------------------
    // extensions
    "prettier.singleQuote": true,
    "prettier.tabWidth": 4,
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "git.autofetch": true,
    "git.autoRepositoryDetection": true,

    // vim
    // 文字の入力
    // i はカーソルの前から insert mode, a はカーソルの後ろから insert mode
    // shift + a は行末から insert mode
    // shift + i は行頭から insert mode
    // s は現在位置の文字を削除して insert mode

    // normal mode で dw はカーソルから単語の最後まで削除
    // yiw(yank inner word) はカーソルから単語の最後までコピー
    // diw(delete inner word) はカーソルから単語の最後まで削除
    // d$ or D はカーソルから行末まで削除(クリップボードに入る)
    // db はカーソルから単語の最初まで削除(クリップボードに入る)
    // x はカーソルの文字を削除(クリップボードに入る)
    // hoge hoge

    // gg でファイルの先頭に移動, G でファイルの最後に移動

    // shift + v で visual line mode
    // visual mode で 0 で始点と終点をトグル

    // 範囲の中を消してから入力
    // aaahoge (fuga) {hoge} fuga
    // <div>hoge</div>
    // cw(change=消した後入力, word) で単語を削除して insert mode になる
    // ci( で () 括弧の中身を削除して insert mode になる
    // ci{ で {} 括弧の中身を削除して insert mode になる
    // cit で <tag> </tag> の中身を削除して insert mode になる
    // C でカーソルから行末まで削除して insert mode になる
    // hoge fuga
    // hello vim

    // f " で " まで移動, ; で次の " まで移動, , で前の " まで移動
    // <link rel="stylesheet" href="./styles/style.css" />
    // zz でカーソルが画面の中央にくるようにスクロール
    // :数字 でその行に移動
    // * でカーソルの単語を検索して移動

    // <div>fuga</div>
    // dst(delete surrond tag) で <div> </div> を削除

    // 'hoge fuga hoge arigata q'
    // cs ' ` で ' を ` に変更
    // hostnama
    // r 入れ替える文字 で一文字置換
    // R で上書きモード
    // ~ でカーソル位置の文字を大文字小文字変換
    // guw で単語を小文字に変換, gUw で単語を大文字に変換
    // hoge fuga

    // OS側とのクリップボードの共有
    "vim.useSystemClipboard": true,
    "vim.handleKeys": {
        "Command + p": true,
        "<C-a>": false,
        "<C-e>": false,
        "<C-f>": false
        // open recent がつかえなくなるが redo の方が重要と判断
        // "<C-r>": false
    },
    "vim.insertModeKeyBindings": [
        {
            "before": ["j", "j"],
            "after": ["<Esc>"]
        }
    ],
    // 画面内の特定の文字に移動できる
    // space → space → s → 移動したい文字 → 記号
    "vim.easymotion": true,
    "vim.leader": "<space>",
    // "vim.useCtrlKeys": true,
}

